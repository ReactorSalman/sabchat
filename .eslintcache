[{"/Users/sakhan/Modesty/chatapp/sabchat/src/App.js":"1","/Users/sakhan/Modesty/chatapp/sabchat/src/reportWebVitals.js":"2","/Users/sakhan/Modesty/chatapp/sabchat/src/index.js":"3"},{"size":3064,"mtime":1606631877897,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1606569533694,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1606582821437,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1a908of",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sakhan/Modesty/chatapp/sabchat/src/App.js",["15"],"import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n// import 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n\tapiKey: \"AIzaSyBD8851btTft8iHMaDYXmLRKYhoUEBOzXA\",\n\tauthDomain: \"ushipfriend.firebaseapp.com\",\n\tdatabaseURL: \"https://ushipfriend.firebaseio.com\",\n\tprojectId: \"ushipfriend\",\n\tstorageBucket: \"ushipfriend.appspot.com\",\n\tmessagingSenderId: \"982688180304\",\n\tappId: \"1:982688180304:web:c6b63a7074c3a832be4955\"\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n// const analytics = firebase.analytics();\n\n\nfunction App() {\n\n\tconst [user] = useAuthState(auth);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<h1 className=\"app-name-font\">sabChat</h1>\n\t\t\t\t<SignOut />\n\t\t\t</header>\n\n\t\t\t<section>\n\t\t\t\t{user ? <ChatRoom /> : <SignIn />}\n\t\t\t</section>\n\n\t\t</div>\n\t);\n}\n\nfunction SignIn() {\n\n\tconst signInWithGoogle = () => {\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\n\t\tauth.signInWithPopup(provider);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"loginBtn loginBtn--google\" onClick={signInWithGoogle}>\n\t\t\t\t\t\tSign in using Google\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"loginBtn loginBtn--facebook\">\n\t\t\t\t\t\tSign in using Google\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<p>Do not violate the community guidelines or you will be banned for life!</p>\n\t\t\t</div>\n\t\t</>\n\t)\n\n}\n\nfunction SignOut() {\n\treturn auth.currentUser && (\n\t\t<button className=\"logoutBtn\" onClick={() => auth.signOut()}>Sign Out</button>\n\t)\n}\n\n\nfunction ChatRoom() {\n\tconst dummy = useRef();\n\tconst messagesRef = firestore.collection('messages');\n\tconst query = messagesRef.orderBy('createdAt').limit(25);\n\n\tconst [messages] = useCollectionData(query, { idField: 'id' });\n\n\tconst [formValue, setFormValue] = useState('');\n\n\n\tconst sendMessage = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst { uid, photoURL } = auth.currentUser;\n\n\t\tawait messagesRef.add({\n\t\t\ttext: formValue,\n\t\t\tcreatedAt: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\tuid,\n\t\t\tphotoURL\n\t\t})\n\n\t\tsetFormValue('');\n\t\tdummy.current.scrollIntoView({ behavior: 'smooth' });\n\t}\n\n\treturn (<>\n\t\t<main>\n\n\t\t\t{messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n\t\t\t<span ref={dummy}></span>\n\n\t\t</main>\n\n\t\t<form onSubmit={sendMessage}>\n\n\t\t\t<input className=\"placeholder-view\" value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n\t\t\t<button className=\"sendBtn\" type=\"submit\" disabled={!formValue}>Send</button>\n\n\t\t</form>\n\t</>)\n}\n\n\nfunction ChatMessage(props) {\n\tconst { text, uid, photoURL } = props.message;\n\n\tconst messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n\treturn (<>\n\t\t<div className={`message ${messageClass}`}>\n\t\t\t<img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n\t\t\t<p>{text}</p>\n\t\t</div>\n\t</>)\n}\n\n\nexport default App;","/Users/sakhan/Modesty/chatapp/sabchat/src/reportWebVitals.js",[],"/Users/sakhan/Modesty/chatapp/sabchat/src/index.js",[],{"ruleId":"16","severity":1,"message":"17","line":131,"column":4,"nodeType":"18","endLine":131,"endColumn":85},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]